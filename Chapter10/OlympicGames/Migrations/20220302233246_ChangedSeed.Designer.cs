// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicGames.Data;

namespace OlympicGames.Migrations
{
    [DbContext(typeof(OlympicsContext))]
    [Migration("20220302233246_ChangedSeed")]
    partial class ChangedSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "ca",
                            Name = "Canada"
                        },
                        new
                        {
                            CountryID = "se",
                            Name = "Sweden"
                        },
                        new
                        {
                            CountryID = "gb",
                            Name = "Great Britain"
                        },
                        new
                        {
                            CountryID = "jm",
                            Name = "Jamaica"
                        },
                        new
                        {
                            CountryID = "it",
                            Name = "Italy"
                        },
                        new
                        {
                            CountryID = "jp",
                            Name = "Japan"
                        },
                        new
                        {
                            CountryID = "de",
                            Name = "Germany"
                        },
                        new
                        {
                            CountryID = "cn",
                            Name = "China"
                        },
                        new
                        {
                            CountryID = "mx",
                            Name = "Mexico"
                        },
                        new
                        {
                            CountryID = "br",
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryID = "nl",
                            Name = "Netherlands"
                        },
                        new
                        {
                            CountryID = "us",
                            Name = "USA"
                        },
                        new
                        {
                            CountryID = "th",
                            Name = "Thailand"
                        },
                        new
                        {
                            CountryID = "uy",
                            Name = "Uruguay"
                        },
                        new
                        {
                            CountryID = "ua",
                            Name = "Ukraine"
                        },
                        new
                        {
                            CountryID = "at",
                            Name = "Austria"
                        },
                        new
                        {
                            CountryID = "pk",
                            Name = "Pakistan"
                        },
                        new
                        {
                            CountryID = "zw",
                            Name = "Zimbabwe"
                        },
                        new
                        {
                            CountryID = "fr",
                            Name = "France"
                        },
                        new
                        {
                            CountryID = "cy",
                            Name = "Cyprus"
                        },
                        new
                        {
                            CountryID = "ru",
                            Name = "Russia"
                        },
                        new
                        {
                            CountryID = "fi",
                            Name = "Finland"
                        },
                        new
                        {
                            CountryID = "sk",
                            Name = "Slovakia"
                        },
                        new
                        {
                            CountryID = "pt",
                            Name = "Portugal"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.OlympicGame", b =>
                {
                    b.Property<string>("OlympicGameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OlympicGameID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            OlympicGameID = "winter",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            OlympicGameID = "summer",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            OlympicGameID = "para",
                            Name = "Paralympics"
                        },
                        new
                        {
                            OlympicGameID = "youth",
                            Name = "Youth Olympics"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Sport", b =>
                {
                    b.Property<string>("SportID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Indoor")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportID");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            SportID = "curl",
                            Indoor = true,
                            Name = "Curling"
                        },
                        new
                        {
                            SportID = "sled",
                            Indoor = false,
                            Name = "Bobsleigh"
                        },
                        new
                        {
                            SportID = "dive",
                            Indoor = true,
                            Name = "Diving"
                        },
                        new
                        {
                            SportID = "cycle",
                            Indoor = false,
                            Name = "Road Cycling"
                        },
                        new
                        {
                            SportID = "arch",
                            Indoor = true,
                            Name = "Archery"
                        },
                        new
                        {
                            SportID = "canoe",
                            Indoor = false,
                            Name = "Canoe Sprint"
                        },
                        new
                        {
                            SportID = "dance",
                            Indoor = true,
                            Name = "Breakdancing"
                        },
                        new
                        {
                            SportID = "skate",
                            Indoor = false,
                            Name = "Skateboarding"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OlympicGameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SportID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TeamID");

                    b.HasIndex("CountryID");

                    b.HasIndex("OlympicGameID");

                    b.HasIndex("SportID");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamID = 1,
                            CountryID = "ca",
                            OlympicGameID = "winter",
                            SportID = "curl"
                        },
                        new
                        {
                            TeamID = 2,
                            CountryID = "se",
                            OlympicGameID = "winter",
                            SportID = "curl"
                        },
                        new
                        {
                            TeamID = 3,
                            CountryID = "gb",
                            OlympicGameID = "winter",
                            SportID = "curl"
                        },
                        new
                        {
                            TeamID = 4,
                            CountryID = "jm",
                            OlympicGameID = "winter",
                            SportID = "sled"
                        },
                        new
                        {
                            TeamID = 5,
                            CountryID = "it",
                            OlympicGameID = "winter",
                            SportID = "sled"
                        },
                        new
                        {
                            TeamID = 6,
                            CountryID = "jp",
                            OlympicGameID = "winter",
                            SportID = "sled"
                        },
                        new
                        {
                            TeamID = 7,
                            CountryID = "de",
                            OlympicGameID = "summer",
                            SportID = "dive"
                        },
                        new
                        {
                            TeamID = 8,
                            CountryID = "cn",
                            OlympicGameID = "summer",
                            SportID = "dive"
                        },
                        new
                        {
                            TeamID = 9,
                            CountryID = "mx",
                            OlympicGameID = "summer",
                            SportID = "dive"
                        },
                        new
                        {
                            TeamID = 10,
                            CountryID = "br",
                            OlympicGameID = "summer",
                            SportID = "cycle"
                        },
                        new
                        {
                            TeamID = 11,
                            CountryID = "nl",
                            OlympicGameID = "summer",
                            SportID = "cycle"
                        },
                        new
                        {
                            TeamID = 12,
                            CountryID = "us",
                            OlympicGameID = "summer",
                            SportID = "cycle"
                        },
                        new
                        {
                            TeamID = 13,
                            CountryID = "th",
                            OlympicGameID = "para",
                            SportID = "arch"
                        },
                        new
                        {
                            TeamID = 14,
                            CountryID = "uy",
                            OlympicGameID = "para",
                            SportID = "arch"
                        },
                        new
                        {
                            TeamID = 15,
                            CountryID = "ua",
                            OlympicGameID = "para",
                            SportID = "arch"
                        },
                        new
                        {
                            TeamID = 16,
                            CountryID = "at",
                            OlympicGameID = "para",
                            SportID = "canoe"
                        },
                        new
                        {
                            TeamID = 17,
                            CountryID = "pk",
                            OlympicGameID = "para",
                            SportID = "canoe"
                        },
                        new
                        {
                            TeamID = 18,
                            CountryID = "zw",
                            OlympicGameID = "para",
                            SportID = "canoe"
                        },
                        new
                        {
                            TeamID = 19,
                            CountryID = "fr",
                            OlympicGameID = "youth",
                            SportID = "dance"
                        },
                        new
                        {
                            TeamID = 20,
                            CountryID = "cy",
                            OlympicGameID = "youth",
                            SportID = "dance"
                        },
                        new
                        {
                            TeamID = 21,
                            CountryID = "ru",
                            OlympicGameID = "youth",
                            SportID = "dance"
                        },
                        new
                        {
                            TeamID = 22,
                            CountryID = "fi",
                            OlympicGameID = "youth",
                            SportID = "skate"
                        },
                        new
                        {
                            TeamID = 23,
                            CountryID = "sk",
                            OlympicGameID = "youth",
                            SportID = "skate"
                        },
                        new
                        {
                            TeamID = 24,
                            CountryID = "pt",
                            OlympicGameID = "youth",
                            SportID = "skate"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Team", b =>
                {
                    b.HasOne("WebApplication1.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID");

                    b.HasOne("WebApplication1.Models.OlympicGame", "Games")
                        .WithMany()
                        .HasForeignKey("OlympicGameID");

                    b.HasOne("WebApplication1.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportID");

                    b.Navigation("Country");

                    b.Navigation("Games");

                    b.Navigation("Sport");
                });
#pragma warning restore 612, 618
        }
    }
}
